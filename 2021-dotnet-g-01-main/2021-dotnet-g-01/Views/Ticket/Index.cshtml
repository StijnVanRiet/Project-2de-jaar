@model IEnumerable<_2021_dotnet_g_01.Models.Domain.Ticket>
@using _2021_dotnet_g_01.Models.Domain

@{
    ViewData["Title"] = "Tickets";
}

<h2>@ViewData["Title"]</h2>
<hr />
<div class="row col-md-12">
    <form class="form-inline" asp-controller="Ticket" asp-action="Index" method="get">
        <div class="form-group mx-sm-3 mb-2">
            <label for="ticketStatus" class="control-label"></label>
            <select name="ticketStatusNumber" id="ticketStatusNumber" asp-items=@(ViewData["TicketStatus"] as SelectList) class="form-control">
                <option value="0">All</option>
            </select>
            <input type="submit" value="Select" class="btn btn-secondary ml-3" />
        </div>
    </form>
</div>

@if (Model.Count() == 0)
{
    <p>You do not have any tickets with that status.</p>
}
else
{
    <table class="table table-striped table-sm table-bordered">
        <tr>
            <th>Title</th>
            <th>Description</th>
            <th>Creation date</th>
            <th>Type</th>

            <th></th>
        </tr>
        @foreach (var item in Model)
        {
            <tr>
                <td>@item.Title</td>
                <td>@item.Description</td>
                <td>@item.CreationDate.Date.ToString("d")</td>
                <td>@item.TicketType.GetString()</td>
                <td>
                    <a asp-controller="Ticket" asp-action="Details" asp-route-id="@item.TicketId">Details</a> |
                    <a asp-controller="Ticket" asp-action="Edit" asp-route-id="@item.TicketId">Edit</a> |
                    <a asp-controller="Ticket" asp-action="Cancel" asp-route-id="@item.TicketId">Cancel</a>
                </td>
            </tr>
        }
    </table>
}
@if (!(bool)ViewData["HasActiveContract"])
{
    <h6>You cannot add new tickets because you do not have an active contract.</h6>
}
else
{
<p>
    <a asp-controller="Ticket" asp-action="Create">Add a ticket</a>
</p>
}